apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: riff-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    component: streaming.projectriff.io
  name: kafkaproviders.streaming.projectriff.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].reason
    name: Reason
    type: string
  group: streaming.projectriff.io
  names:
    categories:
    - riff
    kind: KafkaProvider
    listKind: KafkaProviderList
    plural: kafkaproviders
    singular: kafkaprovider
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: KafkaProvider is the Schema for the providers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KafkaProviderSpec defines the desired state of KafkaProvider
          properties:
            bootstrapServers:
              description: "BootstrapServers is a comma-separated list of host and
                port pairs that are the addresses of the Kafka brokers in a \"bootstrap\"
                Kafka cluster that a Kafka client connects to initially to bootstrap
                itself. \n A host and port pair uses `:` as the separator."
              type: string
          required:
          - bootstrapServers
          type: object
        status:
          description: KafkaProviderStatus defines the observed state of KafkaProvider
          properties:
            conditions:
              description: Conditions the latest available observations of a resource's
                current state.
              items:
                description: 'Conditions defines a readiness condition for a Knative
                  resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another. We use VolatileTime
                      in place of metav1.Time to exclude this from creating equality.Semantic
                      differences (all other things held constant).
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  severity:
                    description: Severity with which to treat failures of this type
                      of condition. When this is not specified, it defaults to Error.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            liiklusDeploymentName:
              type: string
            liiklusServiceName:
              type: string
            observedGeneration:
              description: ObservedGeneration is the 'Generation' of the Service that
                was last processed by the controller.
              format: int64
              type: integer
            provisionerDeploymentName:
              type: string
            provisionerServiceName:
              type: string
          required:
          - liiklusDeploymentName
          - liiklusServiceName
          - provisionerDeploymentName
          - provisionerServiceName
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    component: streaming.projectriff.io
  name: processors.streaming.projectriff.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].reason
    name: Reason
    type: string
  group: streaming.projectriff.io
  names:
    categories:
    - riff
    kind: Processor
    listKind: ProcessorList
    plural: processors
    singular: processor
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Processor is the Schema for the processors API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ProcessorSpec defines the desired state of Processor
          properties:
            functionRef:
              type: string
            inputs:
              items:
                type: string
              type: array
            outputs:
              items:
                type: string
              type: array
          required:
          - functionRef
          - inputs
          - outputs
          type: object
        status:
          description: ProcessorStatus defines the observed state of Processor
          properties:
            conditions:
              description: Conditions the latest available observations of a resource's
                current state.
              items:
                description: 'Conditions defines a readiness condition for a Knative
                  resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another. We use VolatileTime
                      in place of metav1.Time to exclude this from creating equality.Semantic
                      differences (all other things held constant).
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  severity:
                    description: Severity with which to treat failures of this type
                      of condition. When this is not specified, it defaults to Error.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            deploymentName:
              type: string
            functionImage:
              type: string
            inputAddresses:
              items:
                type: string
              type: array
            observedGeneration:
              description: ObservedGeneration is the 'Generation' of the Service that
                was last processed by the controller.
              format: int64
              type: integer
            outputAddresses:
              items:
                type: string
              type: array
            outputContentTypes:
              items:
                type: string
              type: array
            scaledObjectName:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    component: streaming.projectriff.io
  name: streams.streaming.projectriff.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].reason
    name: Reason
    type: string
  group: streaming.projectriff.io
  names:
    categories:
    - riff
    kind: Stream
    listKind: StreamList
    plural: streams
    singular: stream
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Stream is the Schema for the streams API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: StreamSpec defines the desired state of Stream
          properties:
            contentType:
              type: string
            provider:
              type: string
          required:
          - contentType
          - provider
          type: object
        status:
          description: StreamStatus defines the observed state of Stream
          properties:
            address:
              properties:
                gateway:
                  type: string
                topic:
                  type: string
              type: object
            conditions:
              description: Conditions the latest available observations of a resource's
                current state.
              items:
                description: 'Conditions defines a readiness condition for a Knative
                  resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another. We use VolatileTime
                      in place of metav1.Time to exclude this from creating equality.Semantic
                      differences (all other things held constant).
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  severity:
                    description: Severity with which to treat failures of this type
                      of condition. When this is not specified, it defaults to Error.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            observedGeneration:
              description: ObservedGeneration is the 'Generation' of the Service that
                was last processed by the controller.
              format: int64
              type: integer
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    component: streaming.projectriff.io
  name: riff-streaming-leader-election-role
  namespace: riff-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    component: streaming.projectriff.io
  name: riff-streaming-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - build.projectriff.io
  resources:
  - functions
  verbs:
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - keda.k8s.io
  resources:
  - scaledobjects
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - streaming.projectriff.io
  resources:
  - kafkaproviders
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - streaming.projectriff.io
  resources:
  - kafkaproviders/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - streaming.projectriff.io
  resources:
  - processors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - streaming.projectriff.io
  resources:
  - processors/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - streaming.projectriff.io
  resources:
  - streams
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - streaming.projectriff.io
  resources:
  - streams/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    component: streaming.projectriff.io
  name: riff-streaming-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    component: streaming.projectriff.io
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: riff-streaming-readonly-role
rules:
- apiGroups:
  - streaming.projectriff.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    component: streaming.projectriff.io
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: riff-streaming-role
rules:
- apiGroups:
  - streaming.projectriff.io
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    component: streaming.projectriff.io
  name: riff-streaming-leader-election-rolebinding
  namespace: riff-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: riff-streaming-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: riff-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    component: streaming.projectriff.io
  name: riff-streaming-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: riff-streaming-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: riff-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    component: streaming.projectriff.io
  name: riff-streaming-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: riff-streaming-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: riff-system
---
apiVersion: v1
data:
  liiklusImage: bsideup/liiklus:0.9.0
  provisionerImage: gcr.io/projectriff/kafka-provisioner/provisioner-97dd22e72aed3201586a126a023b55db@sha256:5c21bf354fe3804b4acbc8326f7a7820e4a0cbd427af9832fd87d264a611a8de
kind: ConfigMap
metadata:
  labels:
    component: streaming.projectriff.io
  name: riff-streaming-kafka-provider
  namespace: riff-system
---
apiVersion: v1
data:
  processorImage: projectriff/streaming-processor:1.0.0-SNAPSHOT-263f075ee7e96973
kind: ConfigMap
metadata:
  labels:
    component: streaming.projectriff.io
  name: riff-streaming-processor
  namespace: riff-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    component: streaming.projectriff.io
    control-plane: controller-manager
  name: riff-streaming-controller-manager-metrics-service
  namespace: riff-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    component: streaming.projectriff.io
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: streaming.projectriff.io
    control-plane: controller-manager
  name: riff-streaming-controller-manager
  namespace: riff-system
spec:
  replicas: 1
  selector:
    matchLabels:
      component: streaming.projectriff.io
      control-plane: controller-manager
  template:
    metadata:
      labels:
        component: streaming.projectriff.io
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: github.com/projectriff/system/cmd/managers/streaming
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
